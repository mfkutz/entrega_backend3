paths:
  /api/user/:
    get:
      summary: Retrieve all registered users.
      tags:
        - Users
      responses:
        "200":
          description: Successfully retrieved all users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal server error.

  /api/user/{id}:
    get:
      summary: Retrieve a user by their ID.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Unique ID of the user.
      responses:
        "200":
          description: Successfully retrieved the user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found.
        "500":
          description: Internal server error.

    put:
      summary: Update a user by their ID.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Unique ID of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: integer
                role:
                  type: string
                  enum:
                    - admin
                    - user
              example:
                first_name: John
                last_name: Doe
                email: john.doe@example.com
                age: 30
                role: user
      security:
        - AdminAuth: []
      responses:
        "200":
          description: Successfully updated the user.
        "404":
          description: User not found.
        "500":
          description: Internal server error.

    delete:
      summary: Delete a user by their ID.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: Unique ID of the user.
      security:
        - AdminAuth: []
      responses:
        "200":
          description: Successfully deleted the user.
        "404":
          description: User not found.
        "500":
          description: Internal server error.

components:
  securitySchemes:
    AdminAuth:
      type: apiKey
      in: header
      name: Authorization
      description: JWT token must be provided for authentication and authorization as an admin.

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: Unique ID of the user (ObjectId).
        first_name:
          type: string
          description: User's first name.
        last_name:
          type: string
          description: User's last name.
        email:
          type: string
          description: User's unique email address.
          format: email
        age:
          type: integer
          description: User's age.
          minimum: 0
        password:
          type: string
          description: Encrypted password (bcrypt).
        role:
          type: string
          enum:
            - admin
            - user
          description: Role of the user in the application.
          default: user
        cart:
          type: string
          description: Cart ID associated with the user (ObjectId).
        createdAt:
          type: string
          format: date-time
          description: Date and time when the user was created.
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the user was last updated.
      example:
        _id: "672ca16702ceb4403aaf7d8a"
        first_name: Martin
        last_name: Kutzner
        email: admin@gmail.com
        age: 24
        password: "$2b$10$18nU70I6FvKVBF9c/d2CeuBo8af6V6Ozzf19RB.NvuW0vW.SYiIzS"
        role: admin
        cart: "672ca16702ceb4403aaf7d8b"
        createdAt: "2024-11-07T11:15:51.224+00:00"
        updatedAt: "2025-03-07T15:15:51.224+00:00"
